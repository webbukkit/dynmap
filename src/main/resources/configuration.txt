# All paths in this configuration file are relative to Dynmap's data-folder: minecraft_server/plugins/dynmap/

# All map templates are defined in the templates directory
# By default, the 'classic' FlatMap and KzedMap templates are used, which can be found in normal.txt, nether.txt, and skylands.txt
#
# To use the HDMap low-res map templates as world defaults (normal-lowres, nether-lowres and skylands-lowres), uncomment the following line
#   The definitions of these templates are in normal-lowres.txt, nether-lowres.txt, and skylands-lowres.txt
#deftemplatesuffix: lowres
# To use the HDMap hi-res map templates (these can take a VERY long time for initial fullrender), comment the following line
#   The definitions of these templates are in normal-hires.txt, nether-hires.txt, and skylands-hires.txt
#deftemplatesuffix: hires
# Other values will search for templates named normal-<value>, nether-<value>, skylands-<value>

components:
  - class: org.dynmap.ClientConfigurationComponent
  
  - class: org.dynmap.InternalClientUpdateComponent
    sendhealth: true
    sendposition: true
    allowwebchat: true
    webchat-interval: 5
    hidewebchatip: false
    trustclientname: false
  #- class: org.dynmap.JsonFileClientUpdateComponent
  #  writeinterval: 1
  #  sendhealth: true
  #  sendposition: true
  #  allowwebchat: false
  #  webchat-interval: 5
  #  hidewebchatip: false
  
  - class: org.dynmap.SimpleWebChatComponent
    allowchat: true
  #- class: org.dynmap.herochat.HeroWebChatComponent
  #  # Control which HeroChat channel messages from web are directed to 
  #  herochatwebchannel: Global
  #  # Control which channels are monitored and reported to the web
  #  herochatchannels:
  #    - Global
  #    #- Trade
  #    #- Haggle
  
  # Note: this component is needed for the dmarker commands, and for the Marker API to be available to other plugins
  - class: org.dynmap.MarkersComponent
    type: markers
    # If set, shows labels all the time (default is only on hover)
    #showlabel: true
    # If set, enables support for using signs for markers
    #enablesigns: true
    # If set, show spawn points on each world
    showspawn: true
    # Marker used for spawn point
    spawnicon: world
    # Label for spawn points
    spawnlabel: "Spawn"
    
  - class: org.dynmap.ClientComponent
    type: chat
  - class: org.dynmap.ClientComponent
    type: chatballoon
    focuschatballoons: false
  - class: org.dynmap.ClientComponent
    type: chatbox
    showplayerfaces: true
    messagettl: 5
    scrollback: 100
  - class: org.dynmap.ClientComponent
    type: playermarkers
    showplayerfaces: true
    showplayerhealth: true
    # Option to make player faces small - don't use with showplayerhealth
    smallplayerfaces: false
  #  # Optional - make player faces layer hidden by default
  #  hidebydefault: true
  #  # Optional - ordering priority in layer menu (low goes before high - default is 0)
  #  layerprio: 1
  #  # Optional - label for player marker layer (default is 'Players')
  #  label: "Players"
  #- class: org.dynmap.ClientComponent
  #  type: digitalclock
  - class: org.dynmap.ClientComponent
    type: timeofdayclock
    showdigitalclock: true
    #showweather: true
  # Mouse pointer world coordinate display
  - class: org.dynmap.ClientComponent
    type: coord
    label: "Location"
    
  #- class: org.dynmap.ClientComponent
  #  type: logo
  #  text: "Dynmap"
  #  linkurl: "http://forums.bukkit.org/threads/dynmap.489/"
  
  #- class: org.dynmap.regions.RegionsComponent
  #  type: regions
  #  name: WorldGuard
  #  useworldpath: true
  #  filename: regions.yml
  #  basenode: regions
  #  use3dregions: true
  #  regionstyle:
  #    strokeColor: "#FF0000"
  #    strokeOpacity: 0.8
  #    strokeWeight: 3
  #    fillColor: "#FF0000"
  #    fillOpacity: 0.35
  #  # Optional setting to limit which regions to show, by name - if commented out, all regions are shown
  #  visibleregions:
  #    - homebase
  #    - miningsite
  #  # Optional setting to hide specific regions, by name
  #  hiddenregions:
  #    - hiddenplace
  #    - secretsite
  #  # Optional per-region overrides for regionstyle (any defined replace those in regionstyle)
  #  customstyle:
  #    homebase:
  #      strokeColor: "#00FF00"
  #  # Optional - make layer hidden by default
  #  hidebydefault: true
  #  # Optional - ordering priority in layer menu (low goes before high - default is 0)
  #  layerprio: 1
  
  #- class: org.dynmap.regions.RegionsComponent
  #  type: regions
  #  name: Residence
  #  useworldpath: false
  #  filename: res.yml
  #  basenode: Residences
  #  use3dregions: false
  #  infowindow: '<div class="infowindow"><span style="font-size:120%;">%regionname%</span><br /> Owner <span style="font-weight:bold;">%playerowners%</span><br />Flags<br /><span style="font-weight:bold;">%flags%</span></div>'
  #  regionstyle:
  #    strokeColor: "#FF0000"
  #    strokeOpacity: 0.8
  #    strokeWeight: 3
  #    fillColor: "#FF0000"
  #    fillOpacity: 0.35
  #  # Optional setting to limit which regions to show, by name - if commented out, all regions are shown
  #  visibleregions:
  #    - homebase
  #    - miningsite
  #  # Optional setting to hide specific regions, by name
  #  hiddenregions:
  #    - hiddenplace
  #    - secretsite
  #  # Optional per-region overrides for regionstyle (any defined replace those in regionstyle)
  #  customstyle:
  #    homebase:
  #      strokeColor: "#00FF00"
  #  # Optional groups (subareas under a residence) overrides for regionstyle (any defined replace those in regionstyle)
  #  groupstyle:
  #    homebase:
  #      strokeColor: "#007F00"
  #  # Optional - make layer hidden by default
  #  hidebydefault: true
  #  # Optional - ordering priority in layer menu (low goes before high - default is 0)
  #  layerprio: 1

  #- class: org.dynmap.regions.RegionsComponent
  #  type: regions
  #  name: Towny
  #  use3dregions: false
  #  infowindow: '<div class="infowindow"><span style="font-size:120%;">%regionname% (%nation%)</span><br /> Mayor <span style="font-weight:bold;">%playerowners%</span><br /> Associates <span style="font-weight:bold;">%playermanagers%</span><br/>Flags<br /><span style="font-weight:bold;">%flags%</span></div>'
  #  regionstyle:
  #    strokeColor: "#FF0000"
  #    strokeOpacity: 0.8
  #    strokeWeight: 3
  #    fillColor: "#FF0000"
  #    fillOpacity: 0.35
  #  # Optional setting to limit which regions to show, by name - if commented out, all regions are shown
  #  visibleregions:
  #    - homebase
  #    - miningsite
  #  # Optional setting to hide specific regions, by name
  #  hiddenregions:
  #    - hiddenplace
  #    - secretsite
  #  # Optional per-town overrides for regionstyle (any defined replace those in regionstyle)
  #  customstyle:
  #    homebase:
  #      strokeColor: "#00FF00"
  #  # Optional per-nation overrides for regionstyle (any defined replace those in regionstyle)
  #  groupstyle:
  #    MyNation:
  #      strokeColor: "#007F00"
  #  # Optional - make layer hidden by default
  #  hidebydefault: true

  #- class: org.dynmap.regions.RegionsComponent
  #  type: regions
  #  name: Factions
  #  use3dregions: false
  #  infowindow: '<div class="infowindow"><span style="font-size:120%;">%regionname%</span><br />Flags<br /><span style="font-weight:bold;">%flags%</span></div>'
  #  regionstyle:
  #    strokeColor: "#FF0000"
  #    strokeOpacity: 0.8
  #    strokeWeight: 3
  #    fillColor: "#FF0000"
  #    fillOpacity: 0.35
  #  # Optional setting to limit which regions to show, by name - if commented out, all regions are shown
  #  visibleregions:
  #    - faction1
  #    - faction2
  #  # Optional setting to hide specific regions, by name
  #  hiddenregions:
  #    - hiddenfaction
  #  # Optional per-faction overrides for regionstyle (any defined replace those in regionstyle)
  #  customstyle:
  #    faction1:
  #      strokeColor: "#00FF00"
  #  # Optional - make layer hidden by default
  #  hidebydefault: true
  #  # Optional - ordering priority in layer menu (low goes before high - default is 0)
  #  layerprio: 1
  
  #- class: org.dynmap.TestComponent
  #  stuff: "This is some configuration-value"

# Treat hiddenplayers.txt as a whitelist for players to be shown on the map? (Default false)
display-whitelist: false

# How often a tile gets rendered (in seconds).
renderinterval: 1

# How many tiles on update queue before accelerate render interval
renderacceleratethreshold: 60

# How often to render tiles when backlog is above renderacceleratethreshold
renderaccelerateinterval: 0.2

# Save and restore pending tile renders - prevents their loss on server shutdown or /reload
saverestorepending: true

# Zoom-out tile update period - how often to scan for and process tile updates into zoom-out tiles (in seconds)
zoomoutperiod: 30

# Tile hashing is used to minimize tile file updates when no changes have occurred - set to false to disable
enabletilehash: true

# Optional - control darkening of biome-shaded colors in swamp biomes (1.9+) - default is true for 1.9+, false for 1.8.x
#swampshaded: false

render-triggers:
  #- chunkloaded
  #- playermove
  #- playerjoin
  - blockplaced
  - blockbreak
  - leavesdecay
  - blockburn
  - chunkgenerated
  - blockformed
  - blockfaded
  - blockspread
  - pistonmoved
  - explosion

# The path where the tile-files are placed.
tilespath: web/tiles

# The path where the web-files are located.
webpath: web

# The network-interface the webserver will bind to (0.0.0.0 for all interfaces, 127.0.0.1 for only local access).
webserver-bindaddress: 0.0.0.0

# The TCP-port the webserver will listen on.
webserver-port: 8123

# Maximum concurrent session on internal web server - limits resources used in Bukkit server
max-sessions: 30

# Disables Webserver portion of Dynmap (Advanced users only)
disable-webserver: false

# Enable/disable having the web server allow symbolic links (true=compatible with existing code, false=more secure (default))
allow-symlinks: true

# Period between tile renders for fullrender, in seconds (non-zero to pace fullrenders, lessen CPU load)
timesliceinterval: 0.0

# Maximum chunk loads per server tick (1/20th of a second) - reducing this below 90 will impact render performance, but also will reduce server thread load
maxchunkspertick: 200

# Progress report interval for fullrender/radiusrender, in tiles.  Must be 100 or greater
progressloginterval: 100

# EXPERIMENTAL - parallel fullrender: if defined, number of concurrent threads used for fullrender or radiusrender
#   Note: setting this will result in much more intensive CPU use, some additional memory use.  Caution should be used when
#  setting this to equal or exceed the number of physical cores on the system.
#parallelrendercnt: 4

# Interval the browser should poll for updates.
updaterate: 2000

showplayerfacesinmenu: true

# Set sidebaropened: 'true' to pin menu sidebar opened permanently, 'pinned' to default the sidebar to pinned, but allow it to unpin
#sidebaropened: true

# Customized HTTP response headers - add 'id: value' pairs to all HTTP response headers (internal web server only)
#http-response-headers:
#    Access-Control-Allow-Origin: "my-domain.com"
#    X-Custom-Header-Of-Mine: "MyHeaderValue"

joinmessage: "%playername% joined"
quitmessage: "%playername% quit"
spammessage: "You may only chat once every %interval% seconds."
# webprefix and websuffix support using '&color;' as escape code for color code
webprefix: "&color;2[WEB] "
websuffix: "&color;f"
# Enable checking for banned IPs via banned-ips.txt (internal web server only)
check-banned-ips: true

# Default selection when map page is loaded
defaultzoom: 0
defaultworld: world
defaultmap: flat

# NOTE: the 'templates' section is now found in the 'templates' directory
#  Templates CAN still be defined in configuration.txt, as before 0.20
templates:

# NOTE: the 'worlds' section is now found in the worlds.txt (example custom settings can be found in worlds.txt.sample)
#  Worlds CAN still be defined in configuration.txt, as before 0.20
worlds:

# Set to true to enable verbose startup messages - can help with debugging map configuration problems
# Set to false for a much quieter startup log
verbose: false

# Enables debugging.
#debuggers:
#  - class: org.dynmap.debug.LogDebugger
